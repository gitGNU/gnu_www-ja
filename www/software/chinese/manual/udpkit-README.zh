UDPKIT 二零零二

1. 解釋

歡迎來到 udpkit 工具組。
它是由兩個程式和相關的文件所組成的
* udpsend ，會經由封裝成 UDP 資料封包的網路傳送訊息
* udprcv ，會等待並且聽取這樣的資料封包，並且輸出它的資料到標準輸出。

2. 建立

檢查一下在 Make.config 中的組態是否正確，它應該是易於瞭解並且也很好地加以文件化的。你也許會想要〈以 "CC" 進入點〉更動編譯器，以符合你的需求。

登入為 root 。
移到本散佈件的頂層目錄。

* 要強制重建立，鍵入
	> make clean
* 要建立二進制
	> make all

* 要建立包括文件在內的所有東西，
	> make clean-all all documentation
「請注意」這正常來說並無用處，因為在本散佈件中文件已經是最新的了。

3. 安裝

* 要安裝由 Make.config 所指明的在目錄中的所有東西，只要鍵入
> make install

4. 文件

它會被裝置成 man 頁。

要重建立它，你需要有在你的系統裡安裝有 "help2man" 和 "gzip" 。
移到頂層目錄並且鍵入：
	> make documentation

這會清除掉現有的檔案，並且從程式的輸出中重建立起新的。

要安裝它：
> make doc-install

5. 如何使用它

5.1 下面顯示了一個「下午茶警告系統」的情景。請調整埠號為你的本地組態。

. 在「下午茶伺服器」的 cron 表中，放入下列文字
	udpsend 192.168.0.0 "It's tee time, guys!" 9999

. 客戶端必須運行一個 "daemon" 來等待訊息。
	請見例子 client_example.sh

. 最後，好好享受吧 :-)

你現在可以指明一個「符號網路名稱」給 udpsend ，像是 "local" 。它可以在 /etc/network 作組態。

5.2 可靠性與安全問題

就一句話：沒有。傳送者完全無法知道資訊是否正確地被接收到。接收者也完全無法確定資料封包傳送者的身份；甚至送達的資料是否完整，因為目前的散佈件並無支援 checksum 驗證。聽取網路的每一個人都可以看到傳送的資料。處理這些議題的一個方式是加密資料。事實上，如果你需要這些功能特色， udpkit 並不是為你而設計的；使用 SSL 以作為替代吧。

5.3 其它議題

我不知道由 udpsend 所製作出來的資料封包是否會被正確地遞送。

請注意如果你並沒有設埠號給 udprcv 命令，它就不會過濾資料封包。也有其它服務可以在你的網路上使用 UDP ， "grep UDP /etc/services" 會顯示給你一些使用它的實際服務。

6. 許可證的事

包括在這一個套件的所有材料，都被 GPL 所保護。 Copyleft 2002 Sylvain NAHAS 。
你被鼓勵瀏覽代碼〈非常地小〉，根據你的需要更動它，並且重新散佈它。

中文翻譯：劉昭宏 <chliu@gnu.org>
