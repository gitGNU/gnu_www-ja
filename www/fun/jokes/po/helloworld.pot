# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2011-09-20 12:27-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: ENCODING"

#. type: Content of: <title>
msgid "Hello World! - GNU Project - Free Software Foundation (FSF)"
msgstr ""

#. type: Content of: <h2>
msgid "Hello World!"
msgstr ""

#. type: Content of: <p>
msgid ""
"How the way people code &ldquo;Hello World&rdquo; varies depending on their "
"age and job:"
msgstr ""

#. type: Content of: <h4>
msgid "High School/Jr. High"
msgstr ""

#. type: Content of: <pre>
#:  
#, no-wrap
msgid ""
" 10 PRINT \"HELLO WORLD\"\n"
" 20 END\n"
msgstr ""

#. type: Content of: <h4>
msgid "First year in College"
msgstr ""

#. type: Content of: <pre>
#, no-wrap
msgid ""
" program Hello(input, output)\n"
" begin\n"
" writeln('Hello World')\n"
" end.\n"
msgstr ""

#. type: Content of: <h4>
msgid "Senior year in College"
msgstr ""

#. type: Content of: <pre>
#, no-wrap
msgid ""
" (defun hello\n"
" (print\n"
" (cons 'Hello (list 'World))))\n"
msgstr ""

#. type: Content of: <h4>
msgid "New professional"
msgstr ""

#. type: Content of: <pre>
#, no-wrap
msgid ""
" #include &lt;stdio.h&gt;\n"
"\n"
" void main(void)\n"
" {\n"
"  char *message[] = {\"Hello \", \"World\"};\n"
"  int i;\n"
"  for(i = 0; i &lt; 2; ++i)\n"
"  printf(\"%s\", message[i]);\n"
"  printf(\"\\n\");\n"
" }\n"
msgstr ""

#. type: Content of: <h4>
msgid "Seasoned professional"
msgstr ""

#. type: Content of: <pre>
#, no-wrap
msgid ""
" #include &lt;iostream.h&gt;\n"
" #include &lt;string.h&gt;\n"
" class string\n"
" {\n"
"  private:\n"
"   int size;\n"
"   char *ptr;\n"
"  public:\n"
"   string() : size(0), ptr(new char('\\0')) {}\n"
"   string(const string &amp;s) : size(s.size)\n"
"   {\n"
"     ptr = new char[size + 1];\n"
"     strcpy(ptr, s.ptr);\n"
"   }\n"
"   ~string()\n"
"   {\n"
"     delete [] ptr;\n"
"   }\n"
"   friend ostream &amp;operator &lt;&lt;(ostream &amp;, const string "
"&amp;);\n"
"   string &amp;operator=(const char *);\n"
" };\n"
"\n"
" ostream &amp;operator&lt;&lt;(ostream &amp;stream, const string &amp;s)\n"
" {\n"
"   return(stream &lt;&lt; s.ptr);\n"
" }\n"
" string &amp;string::operator=(const char *chrs)\n"
" {\n"
"   if (this != &amp;chrs)\n"
"   {\n"
"     delete [] ptr;\n"
"     size = strlen(chrs);\n"
"     ptr = new char[size + 1];\n"
"     strcpy(ptr, chrs);\n"
"   }\n"
"   return(*this);\n"
" }\n"
" int main()\n"
" {\n"
"   string str;\n"
"   str = \"Hello World\";\n"
"   cout &lt;&lt; str &lt;&lt; endl;\n"
"   return(0);\n"
" }\n"
msgstr ""

#. type: Content of: <h4>
msgid "System Administrator"
msgstr ""

#. type: Content of: <pre>
#, no-wrap
msgid ""
" #include &lt;stdio.h&gt;\n"
" #include &lt;stdlib.h&gt;\n"
" main()\n"
" {\n"
"  char *tmp;\n"
"  int i=0;\n"
"  /* on y va bourin */\n"
"  tmp=(char *)malloc(1024*sizeof(char));\n"
"  while (tmp[i]=\"Hello Wolrd\"[i++]);\n"
"  /* Ooopps y'a une infusion ! */\n"
"  i=(int)tmp[8];\n"
"  tmp[8]=tmp[9];\n"
"  tmp[9]=(char)i;\n"
"  printf(\"%s\\n\",tmp);\n"
" }\n"
msgstr ""

#. type: Content of: <h4>
msgid "Apprentice Hacker"
msgstr ""

#. type: Content of: <pre>
#, no-wrap
msgid ""
" #!/usr/local/bin/perl\n"
" $msg=\"Hello, world.\\n\";\n"
" if ($#ARGV &gt;= 0) {\n"
"     while(defined($arg=shift(@ARGV))) {\n"
"\t $outfilename = $arg;\n"
"\t open(FILE, \"&gt;\" . $outfilename) || die \"Can't write $arg: $!\\n\";\n"
"\t print (FILE $msg);\n"
"\t close(FILE) || die \"Can't close $arg: $!\\n\";\n"
"     }\n"
" } else {\n"
"     print ($msg);\n"
" }\n"
" 1;\n"
msgstr ""

#. type: Content of: <h4>
msgid "Experienced Hacker"
msgstr ""

#. type: Content of: <pre>
#, no-wrap
msgid ""
" #include &lt;stdio.h&gt;\n"
" #include &lt;string.h&gt;\n"
" #define S \"Hello, World\\n\"\n"
" main(){exit(printf(S) == strlen(S) ? 0 : 1);}\n"
msgstr ""

#. type: Content of: <h4>
msgid "Seasoned Hacker"
msgstr ""

#. type: Content of: <pre>
#, no-wrap
msgid ""
" % cc -o a.out ~/src/misc/hw/hw.c\n"
" % a.out\n"
" Hello, world.\n"
msgstr ""

#. type: Content of: <h4>
msgid "Guru Hacker"
msgstr ""

#. type: Content of: <pre>
#, no-wrap
msgid ""
" % cat\n"
" Hello, world.\n"
msgstr ""

#. type: Content of: <h4>
msgid "New Manager (do you remember?)"
msgstr ""

#. type: Content of: <h4>
msgid "Middle Manager"
msgstr ""

#. type: Content of: <pre>
#, no-wrap
msgid ""
" mail -s \"Hello, world.\" bob@b12\n"
" Bob, could you please write me a program that prints \"Hello, world.\"?\n"
" I need it by tomorrow.\n"
" ^D\n"
msgstr ""

#. type: Content of: <h4>
msgid "Senior Manager"
msgstr ""

#. type: Content of: <pre>
#, no-wrap
msgid ""
" % zmail jim\n"
" I need a \"Hello, world.\" program by this afternoon.\n"
msgstr ""

#. type: Content of: <h4>
msgid "Chief Executive"
msgstr ""

#. type: Content of: <pre>
#, no-wrap
msgid ""
" % letter\n"
" letter: Command not found.\n"
" % mail\n"
" To: ^X ^F ^C\n"
" % help mail\n"
" help: Command not found.\n"
" % damn!\n"
" !: Event unrecognized\n"
" % logout\n"
msgstr ""

#. type: Content of: <h4>
msgid "Research Scientist"
msgstr ""

#. type: Content of: <pre>
#, no-wrap
msgid ""
"\tPROGRAM HELLO\n"
"\tPRINT *, 'Hello World'\n"
"\tEND\n"
msgstr ""

#. type: Content of: <h4>
msgid "Older research Scientist"
msgstr ""

#. type: Content of: <pre>
#, no-wrap
msgid ""
"\tWRITE (6, 100)\n"
"    100 FORMAT (1H ,11HHELLO WORLD)\n"
"\tCALL EXIT\n"
"\tEND\n"
msgstr ""

#. type: Content of: <p>
msgid "<a href=\"/fun/humor.html\">Other humor</a> in the GNU Humor Collection."
msgstr ""

#. type: Content of: <h4>
msgid "Disclaimer"
msgstr ""

#. type: Content of: <p>
msgid ""
"The joke on this page was obtained from the FSF's <a "
"href=\"http://lists.gnu.org/\">email archives</a> of the GNU Project."
msgstr ""

#. type: Content of: <p>
msgid "The Free Software Foundation claims no copyright on this joke."
msgstr ""

#. TRANSLATORS: Use space (SPC) as msgstr if you don't have notes.
#. type: Content of: <div>
msgid "*GNUN-SLOT: TRANSLATOR'S NOTES*"
msgstr ""

#. type: Content of: <div><p>
msgid ""
"Please send FSF &amp; GNU inquiries to <a "
"href=\"mailto:gnu@gnu.org\">&lt;gnu@gnu.org&gt;</a>.  There are also <a "
"href=\"/contact/\">other ways to contact</a> the FSF."
msgstr ""

#. type: Content of: <div><p>
msgid ""
"Please send broken links and other corrections or suggestions to <a "
"href=\"mailto:webmasters@gnu.org\">&lt;webmasters@gnu.org&gt;</a>."
msgstr ""

#. type: Content of: <div><p>
msgid ""
"Please see the <a "
"href=\"/server/standards/README.translations.html\">Translations README</a> "
"for information on coordinating and submitting translations of this article."
msgstr ""

#. TRANSLATORS: Use space (SPC) as msgstr if you don't want credits.
#. type: Content of: <div><div>
msgid "*GNUN-SLOT: TRANSLATOR'S CREDITS*"
msgstr ""

#.  timestamp start 
#. type: Content of: <div><p>
msgid "Updated:"
msgstr ""
