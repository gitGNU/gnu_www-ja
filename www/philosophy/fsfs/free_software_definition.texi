@node Free Software Definition, No Owners, The GNU Manifesto, Top
@chapter Free Software Definition

@tex 
%%  unnumberedfootnote
%%  Since`footnotezzz' uses `thisfootno', set it to nothing.   
\global\let\thisfootno\
\global\def\unnumberedfootnote{\footnotezzz}%
@end tex

@unnumberedfootnote{
@smallformat
Originally written in 1996, this version is part of @emph{Free Software, Free Society: Selected Essays of Richard M. Stallman}, 2002, GNU Press (http://www.gnupress.org); ISBN 1-882114-98-1.
@end smallformat
@flushleft
@center Verbatim copying and distribution of this entire article is 
@center permitted in any medium, provided this notice is preserved
@end flushleft
}

@c cindex Free Software Definition
@c sp 2
@c image{images/philosophical-gnu, 4in, 5in}
@c sp 4
@c center @strong{Verbatim copying and distribution of this entire article is permitted }
@c center @strong{in any medium, provided this notice is preserved.}
@c page
@c sp 2
We maintain this free software definition to show clearly what must be
true about a particular software program for it to be considered free
software.

``Free software'' is a matter of liberty, not price. To understand the
concept, you should think of ``free'' as in ``free speech,'' not as in
``free beer.''

Free software is a matter of the users' freedom to run, copy,
distribute, study, change, and improve the software. More precisely, it
refers to four kinds of freedom, for the users of the software:
@itemize @bullet
@item
Freedom 0: The freedom to run the program, for any purpose.
@item
Freedom 1: The freedom to study how the program works, and adapt it to
your needs. (Access to the source code is a precondition for this.)
@item
Freedom 2: The freedom to redistribute copies so you can help your
neighbor.
@item
Freedom 3: The freedom to improve the program, and release your
improvements to the public, so that the whole community benefits. (Access
to the source code is a precondition for this.)
@end itemize

A program is free software if users have all of these freedoms. Thus,
you should be free to redistribute copies, either with or without
modifications, either gratis or charging a fee for distribution, to
anyone anywhere. Being free to do these things means (among other
things) that you do not have to ask or pay for permission.

You should also have the freedom to make modifications and use them
privately in your own work or play, without even mentioning that they
exist. If you do publish your changes, you should not be required to
notify anyone in particular, or in any particular way.

The freedom to use a program means the freedom for any kind of person or
organization to use it on any kind of computer system, for any kind of
overall job, and without being required to communicate subsequently with
the developer or any other specific entity.

The freedom to redistribute copies must include binary or executable
forms of the program, as well as source code, for both modified and
unmodified versions. (Distributing programs in runnable form is
necessary for conveniently installable free operating systems.) It is OK
if there is no way to produce a binary or executable form, but people
must have the freedom to redistribute such forms should they find a way
to make them.

In order for freedoms 1 and 3 (the freedom to make changes and the
freedom to publish improved versions) to be meaningful, one must have
access to the source code of the program. Therefore, accessibility of
source code is a necessary condition for free software.

In order for these freedoms to be real, they must be irrevocable as long
as you do nothing wrong; if the developer of the software has the power
to revoke the license, without your doing anything to give cause, the
software is not free.

However, certain kinds of rules about the manner of distributing free
software are acceptable, when they don't conflict with the central
freedoms. For example, copyleft (very simply stated) is the rule that
when redistributing the program, you cannot add restrictions to deny
other people the central freedoms. This rule does not conflict with the
central freedoms; rather it protects them.

Thus, you may have paid money to get copies of free software, or you
may have obtained copies at no charge. But regardless of how you got
your copies, you always have the freedom to copy and change the
software, even to sell copies.


``Free software'' does not mean ``non-commercial.'' A free program must be
available for commercial use, commercial development, and commercial
distribution. Commercial development of free software is no longer
unusual; such free commercial software is very important.

Rules about how to package a modified version are acceptable, if they do
not effectively block your freedom to release modified versions. Rules
that ``if you make the program available in this way, you must make it
available in that way also'' can be acceptable too, on the same
condition. (Note that such a rule still leaves you the choice of whether
to publish the program or not.) It is also acceptable for the license to
require that, if you have distributed a modified version and a previous
developer asks for a copy of it, you must send one.

In the GNU project, we use ``copyleft'' to protect these freedoms
legally for everyone. But non-copylefted free software also exists. We
believe there are important reasons why it is better to use copyleft,
but if your program is non-copylefted free software, we can still use
it.

Sometimes government export control regulations and trade sanctions can
constrain your freedom to distribute copies of programs
internationally. Software developers do not have the power to eliminate
or override these restrictions, but what they can and must do is refuse
to impose them as conditions of use of the program. In this way, the
restrictions will not affect activities and people outside the
jurisdictions of these governments.

When talking about free software, it is best to avoid using terms like
``give away'' or ``for free,'' because those terms imply that the
issue is about price, not freedom. Some common terms such as
``piracy'' embody opinions we hope you won't endorse. See ``Words to
Avoid'' in this book for a discussion of these terms. We also have a
list of translations of ``free software'' into various languages.

Finally, note that criteria such as those stated in this free software
definition require careful thought for their interpretation. To decide
whether a specific software license qualifies as a free software
license, we judge it based on these criteria to determine whether it
fits their spirit as well as the precise words. If a license includes
unconscionable restrictions, we reject it, even if we did not
anticipate the issue in these criteria. Sometimes a license
requirement raises an issue that calls for extensive thought,
including discussions with a lawyer, before we can decide if the
requirement is acceptable. When we reach a conclusion about a new
issue, we often update these criteria to make it easier to see why
certain licenses do or don't qualify.

If you are interested in whether a specific license qualifies as a
free software license, see our list of licenses,
http://www.gnu.org/licenses/license-list.html. If the license you are
concerned with is not listed there, you can ask us about it by sending
us email at licensing@@gnu.org.
