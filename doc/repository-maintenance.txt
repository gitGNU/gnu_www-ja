Using same working directory for Git and CVS
============================================


Initial Clone
=============

Translator: Clone from Git repo
-------------------------------

$ git clone $USER@git.sv.gnu.org:/srv/git/www-ja.git


GNUN validater: Clone from Git repo, and setup for GNUN
-------------------------------------------------------

# Assume that GNUN is installed already.

$ git clone $USER@git.sv.gnu.org:/srv/git/www-ja.git

$ mv www-ja www-ja-gnun
$ cd www-ja-gnun
$ git checkout -b running-gnun

$ cd www
$ cd server/gnun
$ ln -s /usr/local/share/gnun/GNUmakefile .
$ ln -s /usr/local/share/gnun/config.mk .
$ make   # [ takes long time ]


Coordinator: Clone from Git repo and get from CVS
-------------------------------------------------

# Clone from repo
$ git clone $USER@git.sv.gnu.org:/srv/git/www-ja.git
# Goto repo
$ cd www-ja
# remove www
$ rm www
# ...and get www from CVS
$ cvs -z6 -d:ext:$USER@cvs.savannah.gnu.org:/web/www co www
# confirm there is no change in terms of Git
$ git status



Daily working
=============


Translator: Working with topic branch
-------------------------------------

# When you begin your work
$ git checkout -b my-work

# for example, adding a PO file
$ edit www/distro/po/free-distros.ja.po

# commit it to your local repo
$ git commit -am "added www/distro/po/free-distros.ja.po"

# and push onto server
$ git push


#
$ git checkout master
$ git pull


Coordinator: 'merge'
--------------------

$ git checkout master

# marge topic branch
$ git merge someone-work

# push it back to server
$ git push

$ git push origin :someone-work # removing the topic branch if it's not needed


Coordinator: sync with upstream (when there is no our own change in Git repo)
-----------------------------------------------------------------------------

$ cd www
# in the www/ directory
$ git checkout master
# update from upstream
$ cvs update -d -P
# -d (create new directory), -P (prune empty directory), -C (overwrite local)
# review files to be added
$ git add -n .
# ... and add them now
$ git add .
# review changes in upstream
$ git status
$ git diff HEAD | diffstat
$ git diff HEAD
# commit changes to git
$ git commit -m "Sync with CVS"
# move tag forward
$ git tag -f cvssync
# reflect changes onto server
$ git push; git push --tag
# Possibly, remove old files overwritten (back-uped)
$ find . -type f -name ".#*" -print | xargs rm -f


Coordinator: 'sync', 'checkin' and 'sync' (when we have our own change)
-----------------------------------------------------------------------

$ cd www
$ cvs update -dP
$ git commit -am "Sync with CVS"

# Check and review changes from last sync
$ git log cvssync
# Check changes from the view point of CVS
$ cvs diff

# Commit to upstream, for example
$ cvs commit -m "added www/distro/po/free-distros.ja.po"

# When keyword like $Id$ is used, commiting changes document
# Git distingush such changes
$ git commit -am "Sync with CVS"
$ git tag -f cvssync

$ git push; git push --tag


GNUN validater: running GNUN
----------------------------

$ cd www-ja-gnun
$ cd www/server/gnun
$ make VALIDATE=yes
$ make report TEAM=ja


GNUN validater: move environment forward
----------------------------------------

$ cd www-ja-gnun
$ git fetch
$ git merge origin/master -s recursive -X theirs
# you'll see errors
error: Your local changes to the following files would be overwritten by merge:
[ FILES to be overwritten ]
error: The following untracked working tree files would be overwritten by merge:
[ FILES to be newly created ]
$ rm $(cat /tmp/files-to-be-newly-created)
$ git checkout $(cat /tmp/files-to-be-overwritten)
# do it again
$ git merge origin/master -s recursive -X theirs

$ cd www/server/gnun
$ make VALIDATE=yes
$ make report TEAM=ja


Memorandum of initial setup of the repository
=============================================


Initial CVS import to Git repository
------------------------------------

$ export CVS_RSH=ssh
$ cvs -z6 -d:ext:gniibe@cvs.savannah.gnu.org:/web/www co www
$ git init
$ cat > .gitignore
CVS
tmp
.#*
*~
^D
$ git add .gitignore www
$ git commit -m "Initial commit."
$ git tag cvssync

$ git push --all gniibe@git.sv.gnu.org:/srv/git/www-ja.git
$ git push --tag gniibe@git.sv.gnu.org:/srv/git/www-ja.git
